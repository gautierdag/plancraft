plancraft:
  # model: meta-llama/Meta-Llama-3.1-70B-Instruct
  # tokenizer: meta-llama/Meta-Llama-3.1-70B-Instruct
  # tokenizer: gautierdag/oa-llama3-r64-a32
  # adapter: gautierdag/oa-llama3-r64-a32
  # model: gpt-4o-mini
  # tokenizer: gpt-4o-mini"
  model: oracle
  tokenizer: oracle
  num_generations: 1
  mode: oracle
  hot_cache: True
  max_steps: 80
  quantize: False
  environment:
    resolution: high
  split: val.small
  max_message_window: 30
  resume: False
  output_dir: "outputs"
  few_shot: True
  system_prompt: True
  valid_actions: ["move", "smelt"]
  use_maskrcnn: False # Whether to use pretrained MaskRCNN for object detection - only use if symbolic=False
wandb:
  project: "plancraft"
  entity: "itl"
  mode: "offline"
launch:
  command: "python main.py"
  job_name: "plancraft-s2234411"
  gpu_limit: 2
  gpu_product: NVIDIA-A100-SXM4-80GB
  cpu_request: 24
  ram_request: 160Gi
  interactive: True
  namespace: informatics
  env_vars:
    HF_TOKEN:
      secret_name: s2234411-hf
      key: HF_TOKEN
    OPENAI_API_KEY:
      secret_name: s2234411-openai
      key: OPENAI_API_KEY
    WANDB_API_KEY:
      secret_name: s2234411-wandb
      key: WANDB_API_KEY
    SLACK_WEBHOOK:
      secret_name: s2234411-slack-webhook
      key: SLACK_WEBHOOK
